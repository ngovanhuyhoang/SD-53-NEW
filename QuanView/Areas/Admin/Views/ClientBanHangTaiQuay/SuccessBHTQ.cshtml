@{
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    var orderJson = TempData["OrderJson"] as string;
}

<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-lg-8">
            <div class="card shadow-sm">
                <div class="card-body p-4">
                    <div class="d-flex align-items-center mb-4">
                        <div class="rounded-circle bg-success text-white d-flex align-items-center justify-content-center" style="width:56px;height:56px;">
                            <i class="bi bi-check-lg" style="font-size:28px;"></i>
                        </div>
                        <div class="ms-3">
                            <h4 class="mb-0">Thanh toán thành công</h4>
                            <small class="text-muted">Đơn hàng của bạn đã được ghi nhận</small>
                        </div>
                    </div>

                    <div id="order-detail" class="mb-3"></div>

                    <div class="d-flex gap-2">
                        <a class="btn btn-primary" href="@Url.Action("Index", "ClientBanHangTaiQuay", new { area = "Admin" })">Quay về bán hàng</a>
                        <a class="btn btn-outline-secondary" href="javascript:window.print()">In hóa đơn</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    (async function(){
        const container = document.getElementById('order-detail');
        const raw = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(orderJson));

        async function renderOrder(data){
            const amount = (data.tongTien || 0).toLocaleString('vi-VN') + ' đ';
            const code = data.maHoaDon || '';
            const customer = (data.khachHang && data.khachHang.tenKhachHang) || data.tenNguoiNhan || '';
            const phone = data.soDienThoaiNguoiNhan || '';
            const address = data.diaChiGiaoHang || '';

            let items = '';
            (data.chiTietHoaDons || []).forEach(ct => {
                const name = (ct.sanPhamChiTiet && ct.sanPhamChiTiet.sanPham && ct.sanPhamChiTiet.sanPham.tenSanPham) || 'Sản phẩm';
                const size = (ct.sanPhamChiTiet && ct.sanPhamChiTiet.kichCo && ct.sanPhamChiTiet.kichCo.tenKichCo) ? ' - Size ' + ct.sanPhamChiTiet.kichCo.tenKichCo : '';
                const color = (ct.sanPhamChiTiet && ct.sanPhamChiTiet.mauSac && ct.sanPhamChiTiet.mauSac.tenMauSac) ? ' - Màu ' + ct.sanPhamChiTiet.mauSac.tenMauSac : '';
                items += `<li class="list-group-item d-flex justify-content-between align-items-center">${name}${size}${color}<span>${(ct.thanhTien || 0).toLocaleString('vi-VN')} đ</span></li>`;
            });

            container.innerHTML = `
                <div class="mb-3">
                    <div class="d-flex justify-content-between"><span class="text-muted">Mã đơn:</span><strong>${code}</strong></div>
                    <div class="d-flex justify-content-between"><span class="text-muted">Khách hàng:</span><strong>${customer}</strong></div>
                    <div class="d-flex justify-content-between"><span class="text-muted">SĐT:</span><strong>${phone}</strong></div>
                    <div class="d-flex justify-content-between"><span class="text-muted">Địa chỉ:</span><strong>${address}</strong></div>
                </div>
                <ul class="list-group mb-3">${items}</ul>
                <div class="d-flex justify-content-between fs-5"><span>Tổng thanh toán</span><strong>${amount}</strong></div>
            `;
        }

        // 1) Nếu server đã có dữ liệu temp (hiếm khi ở POS), render ngay
        if (raw) {
            try { await renderOrder(JSON.parse(raw)); return; } catch {}
        }

        // 2) POS flow: đọc payload tạm, tạo hóa đơn rồi hiển thị
        const pending = sessionStorage.getItem('POS_PendingDTO');
        if (!pending) {
            container.innerHTML = '<div class="alert alert-info">Không tìm thấy dữ liệu đơn hàng POS. Vui lòng quay lại bán hàng.</div>';
            return;
        }

        try {
            const dto = JSON.parse(pending);
            const res = await fetch('/Admin/ClientBanHangTaiQuay/chuyen-gio-hang-thanh-hoa-don', {
                method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(dto)
            });
            if (!res.ok) throw new Error('Tạo hóa đơn thất bại');
            const created = await res.json();
            // created: { idHoaDon, maHoaDon, message }
            const detailRes = await fetch(`/Admin/ClientBanHangTaiQuay/hoa-don/${created.idHoaDon}`);
            if (!detailRes.ok) throw new Error('Không lấy được chi tiết hóa đơn');
            const detail = await detailRes.json();
            await renderOrder(detail);
            sessionStorage.removeItem('POS_PendingDTO');
        } catch (e) {
            container.innerHTML = '<div class="alert alert-warning">Có lỗi khi hoàn tất đơn hàng POS sau thanh toán.</div>';
        }
    })();
</script>
