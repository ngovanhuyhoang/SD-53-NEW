@using System.Security.Claims
@using System.Web
@model IEnumerable<QuanApi.Data.DanhMuc>

@{
    ViewData["Title"] = "Danh Sách Danh Mục";
}

<h2>@ViewData["Title"]</h2>
<partial name="_Notification" />
<!-- Nút thêm mới -->
<p>
    <a class="btn btn-success" data-bs-toggle="modal" data-bs-target="#createModal" asp-area="Admin" asp-controller="ProductManage" asp-action="Create">+ Thêm danh mục mới</a>
</p>

<!-- Form tìm kiếm -->
<form id="searchForm" class="mb-3 d-flex">
    <input type="text" id="searchString" name="searchString" value="@ViewData["CurrentFilter"]" class="form-control me-2" placeholder="🔍 Tìm kiếm danh mục..." />
    <button type="submit" class="btn btn-primary">Tìm</button>
</form>

<!-- Bảng danh mục -->
<div class="table-responsive">
    <table class="table table-bordered table-hover table-striped">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(model => model.First().MaDanhMuc)</th>
                <th>@Html.DisplayNameFor(model => model.First().TenDanhMuc)</th>
                <th>Ngày tạo</th>
                <th>Người tạo</th>
                <th>Cập nhật</th>
                <th>Người cập nhật</th>
                <th>Trạng thái</th>
                <th>Thao tác</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.Raw(item.MaDanhMuc)</td>
                    <td>@Html.Raw(item.TenDanhMuc)</td>
                    <td>@item.NgayTao.ToString("dd/MM/yyyy HH:mm")</td>
                    <td>@Html.Raw(item.NguoiTao)</td>
                    <td>@item.LanCapNhatCuoi?.ToString("dd/MM/yyyy HH:mm")</td>
                    <td>@Html.Raw(item.NguoiCapNhat)</td>
                    <td>
                        <div class="form-check form-switch">
                            <input type="checkbox" class="form-check-input toggle-status" data-id="@item.IDDanhMuc" @(item.TrangThai ? "checked" : "") />
                            <span class="badge bg-@(item.TrangThai ? "success" : "secondary")">
                                @(item.TrangThai ? "Kích hoạt" : "Ẩn")
                            </span>
                        </div>
                    </td>
                    <td>
                        <a class="btn btn-sm btn-primary edit-btn" data-id="@item.IDDanhMuc" data-bs-toggle="modal" data-bs-target="#editModal">Sửa</a>
                        <a class="btn btn-sm btn-info details-btn" data-id="@item.IDDanhMuc" data-bs-toggle="modal" data-bs-target="#detailsModal">🔍</a>
                        <a class="btn btn-sm btn-danger delete-btn" data-id="@item.IDDanhMuc">🗑️</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    @{
        int totalItems = ViewBag.TotalItems ?? 0;
        int pageSize = ViewBag.PageSize ?? 10;
        int currentPage = ViewBag.Page ?? 1;
        int totalPages = (int)Math.Ceiling((double)totalItems / pageSize);
    }

    <nav>
        <ul class="pagination">
            @for (int i = 1; i <= totalPages; i++)
            {
                <li class="page-item @(i == currentPage ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { page = i, pageSize = pageSize })">@i</a>
                </li>
            }
        </ul>
    </nav>

</div>

<!-- CSRF Token -->
<input type="hidden" name="__RequestVerificationToken" value="@Html.AntiForgeryToken()

<!-- Modal Thêm mới -->
<div class="modal fade" id="createModal" tabindex="-1" aria-labelledby="createModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="createModalLabel">Thêm danh mục</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Đóng"></button>
            </div>
            <div class="modal-body" id="createModalBody"></div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                <button type="button" class="btn btn-primary" id="saveCreateBtn">Thêm</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal Sửa -->
<div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-warning text-dark">
                <h5 class="modal-title" id="editModalLabel">Sửa danh mục</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Đóng"></button>
            </div>
            <div class="modal-body" id="editModalBody"></div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                <button type="button" class="btn btn-warning" id="saveEditBtn">Lưu</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal Chi tiết -->
<div class="modal fade" id="detailsModal" tabindex="-1" aria-labelledby="detailsModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-info text-dark">
                <h5 class="modal-title" id="detailsModalLabel">Chi tiết danh mục</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Đóng"></button>
            </div>
            <div class="modal-body" id="detailsModalBody"></div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
            </div>
        </div>
    </div>
</div>


<!-- CSS cho spinner -->
<style>
    .spinner {
        display: inline-block;
        width: 1rem;
        height: 1rem;
        vertical-align: text-bottom;
        border: 0.25em solid currentColor;
        border-right-color: transparent;
        border-radius: 50%;
        animation: spinner-border 0.75s linear infinite;
    }

    @@keyframes spinner-border {
        to {
            transform: rotate(360deg);
        }
    }
</style>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.21.0/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/4.0.0/jquery.validate.unobtrusive.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

    <script>
                $(document).ready(function () {
            $('#searchForm').on('submit', function (e) {
                e.preventDefault();
                var keyword = $('#searchString').val();
                $.get('@Url.Action("Index", "ProductManage", new { area = "Admin" })?keyword=' + encodeURIComponent(keyword), function (data) {
                    $('#indexContent').html($(data).find('#indexContent').html()); // Cập nhật bảng
                }).fail(function (xhr) {
                    alert("Lỗi khi tìm kiếm: " + xhr.responseJSON?.message);
                });
            });
        });
        $(document).ready(function () {
            // Xóa nội dung modal khi đóng
            $('#createModal, #editModal, #detailsModal').on('hidden.bs.modal', function () {
                $(this).find('.modal-body').empty();
            });

            // Load Create Modal
            $('#createModal').on('show.bs.modal', function () {
                $('#createModalBody').html('<div class="text-center"><span class="spinner"></span> Đang tải...</div>');
                $.get('@Url.Action("Create", "ProductManage")', function (data) {
                    $('#createModalBody').html(data);
                    $.validator.unobtrusive.parse('#createForm');
                }).fail(function (xhr) {
                    $('#createModalBody').html('<div class="text-danger">Lỗi khi tải form</div>');
                    alert(xhr.responseJSON?.message || "Lỗi khi tải form tạo danh mục");
                });
            });

            // Save Create
                    $('#saveCreateBtn').click(function () {
            var form = $('#createForm');
            if (form.valid()) {
                var formData = form.serializeArray();
                formData.push({
                    name: 'NguoiTao',
                    value: '@Html.Raw(HttpUtility.JavaScriptStringEncode(User.FindFirst(ClaimTypes.Name)?.Value ?? "unknown"))'
                });

                $.ajax({
                    url: '@Url.Action("Create", "ProductManage")',
                    type: 'POST',
                    data: $.param(formData),
                    beforeSend: function () {
                        $('#saveCreateBtn').prop('disabled', true).html('<span class="spinner"></span> Đang xử lý...');
                    },
                    success: function (response) {
                        $('#createModal').modal('hide');
                        location.reload();
                    },
                    error: function (xhr) {
                        alert("Lỗi thêm: " + (xhr.responseJSON?.message || xhr.statusText));
                    },
                    complete: function () {
                        $('#saveCreateBtn').prop('disabled', false).text('Thêm');
                    }
                });
            }
        });


            // Load Edit Modal
            $(document).on('click', '.edit-btn', function (e) {
                e.preventDefault();
                var id = encodeURIComponent($(this).data('id'));
                $('#editModalBody').html('<div class="text-center"><span class="spinner"></span> Đang tải...</div>');
                $.get('@Url.Action("Edit", "ProductManage")/' + id, function (data) {
                    $('#editModalBody').html(data);
                    $.validator.unobtrusive.parse('#editForm');
                }).fail(function (xhr) {
                    $('#editModalBody').html('<div class="text-danger">Lỗi khi tải form</div>');
                    alert(xhr.responseJSON?.message || "Lỗi khi tải form sửa danh mục");
                });
            });

            // Save Edit
            $('#saveEditBtn').click(function () {
                var form = $('#editForm');
                if (form.valid()) {
                    var formData = form.serializeArray().concat({
                        name: '__RequestVerificationToken',
                        value: $('input[name="__RequestVerificationToken"]').val()
                    });
                   formData.push({ 
  name: 'NguoiCapNhat', 
  value: '@Html.Raw(HttpUtility.JavaScriptStringEncode(User.FindFirst(ClaimTypes.Name)?.Value ?? "unknown"))' 
});

                    var id = $('#editForm input[name="IDDanhMuc"]').val();
                    $.post({
                        url: '@Url.Action("Edit", "ProductManage")/' + encodeURIComponent(id),
                        data: $.param(formData),
                        beforeSend: function () {
                            $('#saveEditBtn').prop('disabled', true).html('<span class="spinner"></span> Đang xử lý...');
                        },
                        success: function (response) {
                            if (response.success) {
                                $('#editModal').modal('hide');
                                location.reload();
                            } else {
                                alert(response.message || "Cập nhật thất bại");
                            }
                        },
                        error: function (xhr) {
                            alert(xhr.responseJSON?.message || "Lỗi khi cập nhật danh mục");
                        },
                        complete: function () {
                            $('#saveEditBtn').prop('disabled', false).text('Lưu');
                        }
                    });
                }
            });

            // Load Details Modal
            $(document).on('click', '.details-btn', function (e) {
                e.preventDefault();
                var id = encodeURIComponent($(this).data('id'));
                $('#detailsModalBody').html('<div class="text-center"><span class="spinner"></span> Đang tải...</div>');
                $.get('@Url.Action("Details", "ProductManage")/' + id, function (data) {
                    $('#detailsModalBody').html(data);
                }).fail(function (xhr) {
                    $('#detailsModalBody').html('<div class="text-danger">Lỗi khi tải chi tiết</div>');
                    alert(xhr.responseJSON?.message || "Lỗi khi tải chi tiết danh mục");
                });
            });

            // Delete
            $(document).on('click', '.delete-btn', function (e) {
                e.preventDefault();
                var $btn = $(this);
                var id = $btn.data('id');
                if (confirm('Bạn có chắc muốn xóa danh mục này?')) {
                    $.post({
                        url: '@Url.Action("Delete", "ProductManage")',
                        data: {
                            id: id,
                            __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                        },
                        beforeSend: function () {
                            $btn.prop('disabled', true).html('<span class="spinner"></span> Đang xóa...');
                        },
                        success: function (response) {
                            if (response.success) {
                                location.reload();
                            } else {
                                alert(response.message || "Không xóa được danh mục");
                            }
                        },
                        error: function (xhr) {
                            alert(xhr.responseJSON?.message || "Lỗi khi xóa danh mục");
                        },
                        complete: function () {
                            $btn.prop('disabled', false).text('🗑️');
                        }
                    });
                }
            });

                  $(document).on('change', '.toggle-status', function () {
            var checkbox = $(this);
            var id = checkbox.data('id');
            var isChecked = checkbox.is(':checked');

            $.ajax({
                url: '/Admin/ProductManage/ToggleStatus',
                method: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({ id: id }), // ✅ TRUYỀN OBJECT, TRÙNG VỚI ToggleStatusRequest
                beforeSend: function () {
                    checkbox.prop('disabled', true);
                    checkbox.siblings('span').html('<span class="spinner"></span> Đang xử lý...').removeClass('bg-success bg-secondary');
                },
                success: function (response) {
                    if (response.success) {
                        var isActive = response.trangThai === true;
                        checkbox.siblings('span')
                            .text(isActive ? 'Kích hoạt' : 'Ẩn')
                            .removeClass('bg-success bg-secondary')
                            .addClass(isActive ? 'bg-success' : 'bg-secondary');
                    } else {
                        alert("Không cập nhật được trạng thái");
                        checkbox.prop('checked', !isChecked);
                    }
                },
                error: function () {
                    alert("Lỗi khi gọi ToggleStatus API");
                    checkbox.prop('checked', !isChecked);
                },
                complete: function () {
                    checkbox.prop('disabled', false);
                }
            });
        });
            

        });
    </script>
}