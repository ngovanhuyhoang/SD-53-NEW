@{
    ViewData["Title"] = "Test Quản lý ảnh sản phẩm";
}

@section Styles {
    <link rel="stylesheet" href="~/css/admin-product-images.css" />
}

<div class="container-fluid">
    <h2 class="mb-4">Test Quản lý ảnh sản phẩm</h2>
    
    <div class="row">
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title">Test API Endpoints</h5>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <label for="testSanPhamChiTietId" class="form-label">SanPhamChiTiet ID:</label>
                        <input type="text" class="form-control" id="testSanPhamChiTietId" placeholder="Nhập ID sản phẩm chi tiết">
                    </div>
                    
                    <div class="mb-3">
                        <button class="btn btn-info" onclick="testGetImages()">
                            <i class="fas fa-download"></i> Test Get Images
                        </button>
                        <button class="btn btn-success" onclick="testAddImage()">
                            <i class="fas fa-plus"></i> Test Add Image
                        </button>
                    </div>
                    
                    <div class="mb-3">
                        <label for="testImageUrl" class="form-label">Test Image URL:</label>
                        <input type="url" class="form-control" id="testImageUrl" 
                               value="https://via.placeholder.com/300x200/007bff/ffffff?text=Test+Image" 
                               placeholder="URL ảnh test">
                    </div>
                    
                    <div id="testResults" class="mt-3">
                        <h6>Kết quả test:</h6>
                        <pre id="testOutput" class="bg-light p-3 rounded" style="max-height: 300px; overflow-y: auto;"></pre>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title">Test UI Components</h5>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <button class="btn btn-primary" onclick="testNotification()">
                            <i class="fas fa-bell"></i> Test Notification
                        </button>
                        <button class="btn btn-warning" onclick="testLoading()">
                            <i class="fas fa-spinner"></i> Test Loading
                        </button>
                    </div>
                    
                    <div class="mb-3">
                        <button class="btn btn-info" onclick="testModal()">
                            <i class="fas fa-window-maximize"></i> Test Modal
                        </button>
                    </div>
                    
                    <div class="mb-3">
                        <label for="testPreviewUrl" class="form-label">Test Image Preview:</label>
                        <input type="url" class="form-control" id="testPreviewUrl" 
                               value="https://via.placeholder.com/400x300/28a745/ffffff?text=Preview+Test" 
                               onchange="testPreview()">
                        <div id="testPreviewContainer" class="image-upload-preview mt-2" style="display:none;">
                            <img id="testPreviewImg" src="" alt="Test Preview">
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <div class="row mt-4">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title">Sample Data</h5>
                </div>
                <div class="card-body">
                    <p><strong>Sample SanPhamChiTiet IDs:</strong></p>
                    <ul>
                        <li>Copy một ID từ trang danh sách sản phẩm để test</li>
                        <li>Hoặc sử dụng ID có sẵn trong database</li>
                    </ul>
                    
                    <p><strong>Sample Image URLs:</strong></p>
                    <ul>
                        <li>https://via.placeholder.com/300x200/007bff/ffffff?text=Blue+Image</li>
                        <li>https://via.placeholder.com/300x200/28a745/ffffff?text=Green+Image</li>
                        <li>https://via.placeholder.com/300x200/dc3545/ffffff?text=Red+Image</li>
                        <li>https://via.placeholder.com/300x200/ffc107/000000?text=Yellow+Image</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Test API functions
        function testGetImages() {
            const id = document.getElementById('testSanPhamChiTietId').value;
            if (!id) {
                showTestResult('Error: Vui lòng nhập SanPhamChiTiet ID');
                return;
            }
            
            showTestResult('Testing Get Images API...');
            
            fetch(`/Admin/AnhSanPham/GetImages?sanPhamChiTietId=${id}`)
                .then(response => response.json())
                .then(data => {
                    showTestResult('Get Images Response:', data);
                })
                .catch(error => {
                    showTestResult('Error:', error);
                });
        }
        
        function testAddImage() {
            const id = document.getElementById('testSanPhamChiTietId').value;
            const url = document.getElementById('testImageUrl').value;
            
            if (!id || !url) {
                showTestResult('Error: Vui lòng nhập đầy đủ ID và URL');
                return;
            }
            
            showTestResult('Testing Add Image API...');
            
            const data = {
                urlAnh: url,
                laAnhChinh: false
            };
            
            fetch(`/Admin/AnhSanPham/AddImage?sanPhamChiTietId=${id}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(data)
            })
            .then(response => response.json())
            .then(data => {
                showTestResult('Add Image Response:', data);
            })
            .catch(error => {
                showTestResult('Error:', error);
            });
        }
        
        // Test UI functions
        function testNotification() {
            showNotification('Test notification - Success!', 'success');
            setTimeout(() => {
                showNotification('Test notification - Error!', 'error');
            }, 1000);
        }
        
        function testLoading() {
            const button = document.querySelector('.btn-warning');
            const originalText = button.innerHTML;
            
            button.innerHTML = '<span class="loading-spinner"></span> Loading...';
            button.disabled = true;
            
            setTimeout(() => {
                button.innerHTML = originalText;
                button.disabled = false;
            }, 3000);
        }
        
        function testModal() {
            const container = document.getElementById('imagesContainer');
            container.innerHTML = `
                <div class="text-center py-4">
                    <i class="fas fa-images fa-3x text-muted mb-3"></i>
                    <p class="text-muted">Test modal content</p>
                    <button class="btn btn-primary" onclick="alert('Modal test successful!')">
                        Test Button
                    </button>
                </div>
            `;
            
            const modal = new bootstrap.Modal(document.getElementById('viewImagesModal'));
            modal.show();
        }
        
        function testPreview() {
            const url = document.getElementById('testPreviewUrl').value;
            const container = document.getElementById('testPreviewContainer');
            const img = document.getElementById('testPreviewImg');
            
            if (url) {
                img.src = url;
                img.style.display = 'block';
                container.style.display = 'block';
            } else {
                container.style.display = 'none';
            }
        }
        
        // Utility functions
        function showTestResult(message, data = null) {
            const output = document.getElementById('testOutput');
            const timestamp = new Date().toLocaleTimeString();
            let result = `[${timestamp}] ${message}`;
            
            if (data) {
                result += '\n' + JSON.stringify(data, null, 2);
            }
            
            output.textContent = result + '\n\n' + output.textContent;
        }
        
        // Copy notification function from main page
        function showNotification(message, type) {
            const alertClass = type === 'success' ? 'alert-success' : 'alert-danger';
            const icon = type === 'success' ? 'fas fa-check-circle' : 'fas fa-exclamation-circle';
            
            const notification = document.createElement('div');
            notification.className = `alert ${alertClass} alert-dismissible fade show position-fixed`;
            notification.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 300px;';
            notification.innerHTML = `
                <i class="${icon}"></i> ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
            
            document.body.appendChild(notification);
            
            setTimeout(() => {
                if (notification.parentNode) {
                    notification.remove();
                }
            }, 5000);
        }
    </script>
} 