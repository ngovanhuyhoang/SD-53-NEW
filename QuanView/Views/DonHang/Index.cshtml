@model dynamic
@{
    ViewData["Title"] = "ĐƠN MUA CỦA TÔI";
    var trangThai = ViewBag.TrangThai as string ?? "TatCa";
    var tuNgay = ViewBag.TuNgay as string ?? "";
    var denNgay = ViewBag.DenNgay as string ?? "";
    var loaiDonHang = ViewBag.LoaiDonHang as string ?? "";
    var search = ViewBag.Search as string ?? "";
}

<style>
    .order-tabs {
        border-bottom: 2px solid #eee;
        margin-bottom: 30px;
    }
    
    .order-tab {
        padding: 12px 24px;
        border: none;
        background: none;
        color: #666;
        font-weight: 500;
        border-bottom: 3px solid transparent;
        transition: all 0.3s;
    }
    
    .order-tab.active {
        color: #007bff;
        border-bottom-color: #007bff;
    }
    
    .order-tab:hover {
        color: #007bff;
    }
    
    .filter-section {
        background: #f8f9fa;
        padding: 20px;
        border-radius: 8px;
        margin-bottom: 20px;
    }
    
    .order-table {
        background: white;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    }
    
    .order-table th {
        background: #f8f9fa;
        border: none;
        padding: 15px 10px;
        font-weight: 600;
        color: #333;
    }
    
    .order-table td {
        padding: 15px 10px;
        border: none;
        border-bottom: 1px solid #eee;
        vertical-align: middle;
    }
    
    .status-badge {
        padding: 6px 12px;
        border-radius: 20px;
        font-size: 12px;
        font-weight: 500;
    }
    
    .status-cho-xac-nhan { background: #fff3cd; color: #856404; }
    .status-da-xac-nhan { background: #d1ecf1; color: #0c5460; }
    .status-cho-lay-hang { background: #d4edda; color: #155724; }
    .status-da-lay-hang { background: #cce5ff; color: #004085; }
    .status-cho-giao-hang { background: #d1e7dd; color: #0f5132; }
    .status-dang-giao-hang { background: #d4edda; color: #155724; }
    .status-da-giao { background: #cce5ff; color: #004085; }
    .status-giao-hang-thanh-cong { background: #d1e7dd; color: #0f5132; }
    .status-da-huy { background: #f8d7da; color: #721c24; }
    
    .action-btn {
        padding: 8px 16px;
        border: none;
        border-radius: 6px;
        font-size: 12px;
        font-weight: 500;
        cursor: pointer;
        transition: all 0.3s;
        display: inline-flex;
        align-items: center;
        gap: 6px;
    }
    
    .btn-view {
        background: #007bff;
        color: white;
    }
    
    .btn-view:hover {
        background: #0056b3;
        transform: translateY(-1px);
    }
    
    .btn-cancel {
        background: #dc3545;
        color: white;
    }
    
    .btn-cancel:hover {
        background: #c82333;
        transform: translateY(-1px);
    }
</style>

<div class="container py-4">
    <h2 class="mb-4">ĐƠN MUA CỦA TÔI</h2>
    
    <!-- Tabs trạng thái -->
    <div class="order-tabs">
        <button class="order-tab @(trangThai == "TatCa" ? "active" : "")" onclick="filterOrders('TatCa')">
            Tất cả
        </button>
        <button class="order-tab @(trangThai == "Chờ xác nhận" ? "active" : "")" onclick="filterOrders('Chờ xác nhận')">
            Chờ xác nhận
        </button>
        <button class="order-tab @(trangThai == "Đã xác nhận" ? "active" : "")" onclick="filterOrders('Đã xác nhận')">
            Đã xác nhận
        </button>
        <button class="order-tab @(trangThai == "Chờ lấy hàng" ? "active" : "")" onclick="filterOrders('Chờ lấy hàng')">
            Chờ lấy hàng
        </button>
        <button class="order-tab @(trangThai == "Đã lấy hàng" ? "active" : "")" onclick="filterOrders('Đã lấy hàng')">
            Đã lấy hàng
        </button>
        <button class="order-tab @(trangThai == "Chờ giao hàng" ? "active" : "")" onclick="filterOrders('Chờ giao hàng')">
            Chờ giao hàng
        </button>
        <button class="order-tab @(trangThai == "Đang giao hàng" ? "active" : "")" onclick="filterOrders('Đang giao hàng')">
            Đang giao hàng
        </button>
        <button class="order-tab @(trangThai == "Đã giao" ? "active" : "")" onclick="filterOrders('Đã giao')">
            Đã giao
        </button>
        <button class="order-tab @(trangThai == "Giao hàng thành công" ? "active" : "")" onclick="filterOrders('Giao hàng thành công')">
            Hoàn thành
        </button>
        <button class="order-tab @(trangThai == "Đã hủy" ? "active" : "")" onclick="filterOrders('Đã hủy')">
            Đã hủy
        </button>
    </div>
    
    <!-- Bộ lọc nâng cao -->
    <div class="filter-section">
        @{
            var customerIdClaim = User.FindFirst("custom:id_khachhang");
            bool isLoggedIn = !string.IsNullOrEmpty(customerIdClaim?.Value);
        }
        
        @if (!isLoggedIn)
        {
            <!-- Form tìm kiếm cho khách vãng lai -->
            <div class="alert alert-info mb-3">
                <i class="bi bi-info-circle"></i>
                <strong>Khách vãng lai:</strong> Vui lòng nhập số điện thoại để tìm đơn hàng của bạn
            </div>
        }
        
        <form method="get" action="@Url.Action("Index")" id="filterForm">
            <div class="row">
                @if (!isLoggedIn)
                {
                    <!-- Tìm kiếm bằng số điện thoại cho khách vãng lai -->
                    <div class="col-md-4">
                        <label class="form-label">Số điện thoại:</label>
                        <input type="tel" class="form-control" name="phoneNumber" 
                               placeholder="Nhập số điện thoại đặt hàng" 
                               value="@ViewBag.PhoneNumber" 
                               pattern="[0-9]{10,11}" 
                               title="Vui lòng nhập số điện thoại hợp lệ (10-11 số)"
                               required>
                        <div class="form-text">Nhập số điện thoại bạn đã dùng khi đặt hàng</div>
                    </div>
                }
                else
                {
                    <!-- Các filter cho khách hàng đã đăng nhập -->
                    <div class="col-md-3">
                        <label class="form-label">Từ ngày:</label>
                        <input type="date" class="form-control" name="tuNgay" value="@tuNgay">
                    </div>
                    <div class="col-md-3">
                        <label class="form-label">Đến ngày:</label>
                        <input type="date" class="form-control" name="denNgay" value="@denNgay">
                    </div>
                    <div class="col-md-3">
                        <label class="form-label">Tìm kiếm:</label>
                        <input type="text" class="form-control" name="search" placeholder="Nhập mã đơn hàng" value="@search">
                    </div>
                }
            </div>
            <div class="row mt-3">
                <div class="col-12">
                    <button type="submit" class="btn btn-primary">
                        <i class="bi bi-search"></i> @(isLoggedIn ? "Lọc" : "Tìm đơn hàng")
                    </button>
                    <a href="@Url.Action("Index")" class="btn btn-secondary">
                        <i class="bi bi-x-circle"></i> Xóa bộ lọc
                    </a>
                </div>
            </div>
        </form>
    </div>
    
    <!-- Bảng đơn hàng -->
    <div class="table-responsive order-table">
        <table class="table table-hover mb-0">
            <thead>
                <tr>
                    <th>#</th>
                    <th>Mã hóa đơn</th>
                    <th>Tổng giá trị</th>
                    <th>Tiền giảm</th>
                    <th>Trạng thái</th>
                    <th>Loại đơn</th>
                    <th>Ngày đặt</th>
                    <th>Hành động</th>
                </tr>
            </thead>
            <tbody id="orderTableBody">
                @{
                    var hoaDons = Model?.HoaDons as List<QuanApi.Data.HoaDon> ?? new List<QuanApi.Data.HoaDon>();
                    var pagination = Model?.Pagination;
                }
                @if (hoaDons != null && hoaDons.Any())
                {
                    int stt = 1;
                    foreach (var hoaDon in hoaDons.OrderByDescending(h => h.NgayTao))
                    {
                        <tr>
                            <td>@stt</td>
                            <td><strong>@hoaDon.MaHoaDon</strong></td>
                            <td>@hoaDon.TongTien.ToString("N0") ₫</td>
                            <td>@(hoaDon.TienGiam?.ToString("N0") ?? "0") ₫</td>
                            <td>
                                <span class="status-badge status-@hoaDon.TrangThai.ToLower().Replace(" ", "-")">
                                    @GetTrangThaiText(hoaDon.TrangThai)
                                </span>
                            </td>
                            <td>
                                @if (!string.IsNullOrEmpty(hoaDon.DiaChiGiaoHang))
                                {
                                    <span class="badge bg-primary">Online</span>
                                }
                                else
                                {
                                    <span class="badge bg-secondary">Tại quầy</span>
                                }
                            </td>
                            <td>@hoaDon.NgayTao.ToString("dd/MM/yyyy HH:mm")</td>
                            <td>
                                <div class="d-flex gap-2">
                                    @if (hoaDon.TrangThai == "Chờ xác nhận" || hoaDon.TrangThai == "Đã xác nhận")
                                    {
                                        <button class="action-btn btn-cancel" onclick="cancelOrder('@hoaDon.IDHoaDon')" title="Hủy đơn">
                                            <i class="bi bi-x-circle"></i> Hủy đơn
                                        </button>
                                    }
                                    
                                    @if (hoaDon.TrangThai == "Đang giao hàng")
                                    {
                                        <button class="action-btn btn-view" onclick="viewShippingInfo('@hoaDon.IDHoaDon')" title="Xem thông tin vận chuyển">
                                            <i class="bi bi-truck"></i> Vận chuyển
                                        </button>
                                    }
                                </div>
                            </td>
                        </tr>
                        stt++;
                    }
                }
                else
                {
                    <tr>
                        <td colspan="8" class="text-center py-4">
                            <div class="text-muted">
                                <i class="bi bi-inbox" style="font-size: 3rem;"></i>
                                @if (!isLoggedIn && !string.IsNullOrEmpty(ViewBag.PhoneNumber))
                                {
                                    <p class="mt-2">Không tìm thấy đơn hàng nào cho số điện thoại <strong>@ViewBag.PhoneNumber</strong></p>
                                    <p class="text-sm">Vui lòng kiểm tra lại số điện thoại hoặc liên hệ hỗ trợ</p>
                                }
                                else if (!isLoggedIn)
                                {
                                    <p class="mt-2">Vui lòng nhập số điện thoại để tìm đơn hàng</p>
                                }
                                else
                                {
                                    <p class="mt-2">Không có đơn hàng nào</p>
                                }
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    
    <!-- Phân trang -->
    @if (pagination != null)
    {
        <div class="d-flex justify-content-between align-items-center mt-4">
            <div class="pagination-info">
                Hiển thị @(((pagination.CurrentPage - 1) * pagination.PageSize) + 1) - 
                @Math.Min(pagination.CurrentPage * pagination.PageSize, pagination.TotalCount) 
                trong tổng số @pagination.TotalCount đơn hàng
            </div>
            
            <nav aria-label="Phân trang">
                <ul class="pagination pagination-sm mb-0">
                    @if (pagination.HasPreviousPage)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("Index", new { 
                                page = pagination.CurrentPage - 1,
                                trangThai = ViewBag.TrangThai,
                                tuNgay = ViewBag.TuNgay,
                                denNgay = ViewBag.DenNgay,
                                search = ViewBag.Search
                            })">
                                <i class="fas fa-chevron-left"></i>
                            </a>
                        </li>
                    }
                    
                    @{
                        var startPage = Math.Max(1, pagination.CurrentPage - 2);
                        var endPage = Math.Min(pagination.TotalPages, pagination.CurrentPage + 2);
                    }
                    
                    @for (int i = startPage; i <= endPage; i++)
                    {
                        <li class="page-item @(i == pagination.CurrentPage ? "active" : "")">
                            <a class="page-link" href="@Url.Action("Index", new { 
                                page = i,
                                trangThai = ViewBag.TrangThai,
                                tuNgay = ViewBag.TuNgay,
                                denNgay = ViewBag.DenNgay,
                                search = ViewBag.Search
                            })">@i</a>
                        </li>
                    }
                    
                    @if (pagination.HasNextPage)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("Index", new { 
                                page = pagination.CurrentPage + 1,
                                trangThai = ViewBag.TrangThai,
                                tuNgay = ViewBag.TuNgay,
                                denNgay = ViewBag.DenNgay,
                                search = ViewBag.Search
                            })">
                                <i class="fas fa-chevron-right"></i>
                            </a>
                        </li>
                    }
                </ul>
            </nav>
        </div>
    }
</div>

<!-- Modal chi tiết đơn hàng -->
<div class="modal fade" id="orderDetailModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Chi tiết đơn hàng</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="orderDetailContent">
                <!-- Nội dung sẽ được load động -->
            </div>
        </div>
    </div>
</div>

<!-- Modal thông tin vận chuyển -->
<div class="modal fade" id="shippingInfoModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Thông tin vận chuyển</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="shippingInfoContent">
                <!-- Nội dung sẽ được load động -->
            </div>
        </div>
    </div>
</div>

<script>
let currentStatus = '@trangThai';

// Lọc đơn hàng theo trạng thái
function filterOrders(status) {
    currentStatus = status;
    const url = new URL(window.location);
    url.searchParams.set('trangThai', status);
    window.location.href = url.toString();
}

// Validate số điện thoại cho khách vãng lai
document.addEventListener('DOMContentLoaded', function() {
    const phoneInput = document.querySelector('input[name="phoneNumber"]');
    if (phoneInput) {
        phoneInput.addEventListener('input', function(e) {
            // Chỉ cho phép nhập số
            this.value = this.value.replace(/[^0-9]/g, '');
            
            // Giới hạn độ dài 10-11 số
            if (this.value.length > 11) {
                this.value = this.value.slice(0, 11);
            }
        });
        
        // Validate khi submit form
        const form = document.getElementById('filterForm');
        form.addEventListener('submit', function(e) {
            if (phoneInput && phoneInput.value.trim() === '') {
                e.preventDefault();
                alert('Vui lòng nhập số điện thoại để tìm đơn hàng');
                phoneInput.focus();
                return false;
            }
            
            if (phoneInput && phoneInput.value.length < 10) {
                e.preventDefault();
                alert('Số điện thoại phải có ít nhất 10 số');
                phoneInput.focus();
                return false;
            }
        });
    }
});

// Hủy đơn hàng
function cancelOrder(orderId) {
    if (confirm('Bạn có chắc muốn hủy đơn hàng này?')) {
        fetch(`/DonHang/HuyDon/${orderId}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            }
        })
        .then(response => response.json())
        .then(result => {
            if (result.success) {
                alert('Đã hủy đơn hàng thành công!');
                location.reload();
            } else {
                alert(result.message || 'Không thể hủy đơn hàng');
            }
        })
        .catch(error => {
            console.error('Lỗi:', error);
            alert('Có lỗi xảy ra khi hủy đơn hàng');
        });
    }
}

// Xem thông tin vận chuyển
async function viewShippingInfo(orderId) { 
            alert('Đơn hàng sẽ đến tay bạn từ 3-5 ngày');  
}
</script>

@functions {
    public string GetTrangThaiText(string trangThai)
    {
        return trangThai switch
        {
            "Chờ xác nhận" => "Chờ xác nhận",
            "Đã xác nhận" => "Đã xác nhận",
            "Chờ lấy hàng" => "Chờ lấy hàng",
            "Đã lấy hàng" => "Đã lấy hàng",
            "Chờ giao hàng" => "Chờ giao hàng",
            "Đang giao hàng" => "Đang giao hàng",
            "Đã giao" => "Đã giao",
            "Giao hàng thành công" => "Hoàn thành",
            "Đã hủy" => "Đã hủy",
            _ => trangThai
        };
    }
}
